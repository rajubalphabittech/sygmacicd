@model atm.Models.RouteManagerViewModel
@using StackExchange.Profiling;
@using StackExchange.Profiling.Mvc
@section stylesheets{
    @Styles.Render("~/Content/rm")
}
<div class="container-fluid">
    <div class="row">
        <span onclick="openRoute('left')" id="leftRouteTab" class="pull-left">
            <a href="#" type="button" class="btn btn-collapse btn-collapse-left btn-sm" data-toggle="offcanvas">
                <i class="glyphicon glyphicon-chevron-up"></i> ROUTE 1
            </a>
        </span>
        <span onclick="openRoute('right')" id="rightRouteTab" class="pull-right">
            <a href="#" type="button" class="btn btn-collapse btn-collapse-right btn-sm" data-toggle="offcanvas">
                <i class="glyphicon glyphicon-chevron-down"></i> ROUTE 2
            </a>
        </span>
    </div>
    <!-- /.row-->
    <div class="row">
        <div class="content">
            <div class="text-center">
                <div class="pageTitle">@ViewBag.Title</div>
                <div class="pageSubtitle">
                    &nbsp;
                </div>
                <div class="center-block" style="display: inline-flex;" data-centernumber="">
                    <div>
                        @Html.DropDownList("RouteCenterSelector", Model.CenterSelectList, "Select Center...", new { @class = "form-control center-block route-filter-center-selector input-sm", style = "display: inline-flex;" })


                    </div>
                </div>
                <div id="map"></div>
                <div class="global-spinner-layer" style="display:none"><i class='fa fa-spinner fa-5x fa-spin loading' aria-hidden='true'></i></div>
            </div>
        </div>
        <!-- /.content-->
    </div>
    <!-- /.row-->
</div>

@Html.Partial("_routeOverlay", new atm.Models.RouteOverlayModel { Position = "left", PageModel = Model })

@Html.Partial("_routeOverlay", new atm.Models.RouteOverlayModel { Position = "right", PageModel = Model })

@section scripts{
    @using (MiniProfiler.Current.Step("scripts rendering"))
    {
        @(this.TimeScript("rm script", @Scripts.Render("~/bundles/routemanager")))
        @(this.TimeScript("google map script", @<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDlBLAA_ZH6pslExCPHhOt0XFl7FbhwG7w&callback=initMap"></script>))
    }

    <!--Reference the autogenerated SignalR hub script. -->
    @*<script src="signalr/hubs"></script>*@
    <script type="text/javascript">
        $(document).ready(function () {
            $(".datepicker").datepicker();

            var lastSunday = addDays(getLastSaturday(), 1).toISOString().split('T')[0];
            var nextSaturday = getNextSaturday().toISOString().split('T')[0];
            $(".route-filter-dispatch-start-date").prop('min', lastSunday);
            $(".route-filter-dispatch-end-date").prop('min', lastSunday);
            $(".route-filter-dispatch-start-date").prop('max', nextSaturday);
            $(".route-filter-dispatch-end-date").prop('max', nextSaturday);

            $(".strictly-numeric-only").keypress(function (event) {
                if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105)) {
                    // should  be ok
                } else {
                    event.preventDefault();
                }
            });

            // ajax handler for route filters, search
            bindRouteFilters();

            // handler for stop events
            bindStopDetailToggles();
            bindStopHeader();
            bindStopMove();
            bindStopComment();

            // signalR Hub handler
            //bindRouteHub();

            closeRoute('left');
            closeRoute('right');
        });
    </script>
}
