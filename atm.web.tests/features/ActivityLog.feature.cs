// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace atm.web.tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RTAndRMActivityLogFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "ActivityLog.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RT and RM Activity Log", "//As a user I should be able to view, add, and edit the activity log from either " +
                    "the Route Tracker\r\n//or Route Manager pages", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "RT and RM Activity Log")))
            {
                global::atm.web.tests.Features.RTAndRMActivityLogFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("User should see most recent Activity log comment for a stop in the comment column" +
            " of the Route Tracker")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RT and RM Activity Log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG301")]
        public virtual void UserShouldSeeMostRecentActivityLogCommentForAStopInTheCommentColumnOfTheRouteTracker()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User should see most recent Activity log comment for a stop in the comment column" +
                    " of the Route Tracker", null, new string[] {
                        "SYG301"});
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
 testRunner.Given("I am an authenticated ATM user on the \"Route Tracker\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.And("I select a random center", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("I view Stops for the first route listed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.When("I create an activity log comment with a category of Customer Communication for a " +
                    "random stop", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("I should see the comment column show the activity log comment I entered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("A new Activity Log comment is created when the User saves a comment in the Route " +
            "Tracker")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RT and RM Activity Log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG301")]
        public virtual void ANewActivityLogCommentIsCreatedWhenTheUserSavesACommentInTheRouteTracker()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A new Activity Log comment is created when the User saves a comment in the Route " +
                    "Tracker", null, new string[] {
                        "SYG301"});
#line 14
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
 testRunner.Given("I am an authenticated ATM user on the \"Route Tracker\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.And("I select a random center", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("I view Stops for the first route listed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("I enter a comment for a random stop", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("I Submit the changes to the route stops", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.When("I view the activity log for the selected stop", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.Then("I should see an activity log comment created for the comment I just entered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("the RT comment column should NOT show the latest Activity Log comment if its\' typ" +
            "e is \'Driver Communication\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RT and RM Activity Log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG301")]
        public virtual void TheRTCommentColumnShouldNOTShowTheLatestActivityLogCommentIfItsTypeIsDriverCommunication()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("the RT comment column should NOT show the latest Activity Log comment if its\' typ" +
                    "e is \'Driver Communication\'", null, new string[] {
                        "SYG301"});
#line 24
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 25
 testRunner.Given("I am an authenticated ATM user on the \"Route Tracker\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
 testRunner.And("I select a random center", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I view Stops for the first route listed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.When("I create an activity log comment with a category of Driver Communication for a ra" +
                    "ndom stop", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then("I should not see the comment column show the activity log comment I entered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("the RT comment column should NOT show the latest Activity Log comment if its\' typ" +
            "e is \'Stop Adjustment\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RT and RM Activity Log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG301")]
        public virtual void TheRTCommentColumnShouldNOTShowTheLatestActivityLogCommentIfItsTypeIsStopAdjustment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("the RT comment column should NOT show the latest Activity Log comment if its\' typ" +
                    "e is \'Stop Adjustment\'", null, new string[] {
                        "SYG301"});
#line 32
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 33
 testRunner.Given("I am an authenticated ATM user on the \"Route Tracker\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
 testRunner.And("I select a random center", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And("I view Stops for the first route listed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.When("I create an activity log comment with a category of Stop Adjustment for a random " +
                    "stop", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.Then("I should not see the comment column show the activity log comment I entered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("User can see the Call Logging button when landing on the Activity Log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RT and RM Activity Log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG283")]
        public virtual void UserCanSeeTheCallLoggingButtonWhenLandingOnTheActivityLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User can see the Call Logging button when landing on the Activity Log", null, new string[] {
                        "SYG283"});
#line 40
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 41
 testRunner.Given("I am an authenticated ATM user on the \"Route Tracker\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.And("I select a random center", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.When("I load the activity log for a randomly selected route and stop", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.Then("I should see a Call Logging button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Route Activity Log Aggregator should be able to display for any route")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RT and RM Activity Log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG410")]
        public virtual void RouteActivityLogAggregatorShouldBeAbleToDisplayForAnyRoute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Route Activity Log Aggregator should be able to display for any route", null, new string[] {
                        "SYG410"});
#line 47
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 48
 testRunner.Given("I am an authenticated ATM user on the \"Route Tracker\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.And("I select a random center", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.When("I open the Activity Log Aggregator for a random route", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.Then("I should see the Activity Log popup loaded for the that route", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("RT can create Activity Log comment in stop 0 for a route using Quick Add screen")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RT and RM Activity Log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG407")]
        public virtual void RTCanCreateActivityLogCommentInStop0ForARouteUsingQuickAddScreen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RT can create Activity Log comment in stop 0 for a route using Quick Add screen", null, new string[] {
                        "SYG407"});
#line 54
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 55
 testRunner.Given("I\'m an authenticated ATM user on the \"Route Tracker\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
 testRunner.And("I select a random center", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And("I set the Date Range to Current Week", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.When("I use the Quick Add activity log to create a comment with a category of Customer " +
                    "Communication for stop number \"0\" and random route", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.Then("I should see the comment I just created in the Aggregate Activity Viewer for the " +
                    "randomly selected route", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("RM can create Activity Log comment in stop 0 for a route using Quick Add screen")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RT and RM Activity Log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG407")]
        public virtual void RMCanCreateActivityLogCommentInStop0ForARouteUsingQuickAddScreen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RM can create Activity Log comment in stop 0 for a route using Quick Add screen", null, new string[] {
                        "SYG407"});
#line 62
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 63
 testRunner.Given("I\'m an authenticated ATM user on the \"Route Manager\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 64
 testRunner.And("I select a random center", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.When("I use the Quick Add activity log to create a comment with a category of Customer " +
                    "Communication for a random stop number and route", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.Then("I should see that the Quick Add Activity Log comment saved correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Save button should be disabled when no Route selected in the Quick Add Activity L" +
            "og popup")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RT and RM Activity Log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG407")]
        public virtual void SaveButtonShouldBeDisabledWhenNoRouteSelectedInTheQuickAddActivityLogPopup()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save button should be disabled when no Route selected in the Quick Add Activity L" +
                    "og popup", null, new string[] {
                        "SYG407"});
#line 69
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 70
 testRunner.Given("I\'m an authenticated ATM user on the \"Route Manager\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
 testRunner.And("I select a random center", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.When("I open the Quick Add Activity Log Comment popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
 testRunner.Then("the \'Activity Log Save Comment\' button should be disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("a Time Adjustment comment is created in the activity log when stop adjusted deliv" +
            "ery is changed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RT and RM Activity Log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG417")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG455")]
        public virtual void ATimeAdjustmentCommentIsCreatedInTheActivityLogWhenStopAdjustedDeliveryIsChanged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("a Time Adjustment comment is created in the activity log when stop adjusted deliv" +
                    "ery is changed", null, new string[] {
                        "SYG417",
                        "SYG455"});
#line 76
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 77
 testRunner.Given("I am an authenticated ATM user on the \"Route Tracker\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 78
 testRunner.And("I select a random center", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("I update the Adjusted Delivery value for a random route and stop number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And("I Submit the changes to the route stops", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.When("I open the Activity Log Aggregator for the selected route", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
 testRunner.Then("I should see a Time Adjustment comment for the updated stop which shows the Adjus" +
                    "ted Delivery time change", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("a Time Adjustment comment is created in the activity log when stop Scheduled Deli" +
            "very is changed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RT and RM Activity Log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG417")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SYG455")]
        public virtual void ATimeAdjustmentCommentIsCreatedInTheActivityLogWhenStopScheduledDeliveryIsChanged()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("a Time Adjustment comment is created in the activity log when stop Scheduled Deli" +
                    "very is changed", null, new string[] {
                        "SYG417",
                        "SYG455"});
#line 85
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 86
 testRunner.Given("I am an authenticated ATM user on the \"Route Tracker\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 87
 testRunner.And("I select a random center", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
 testRunner.And("I update the Scheduled Delivery value for a random route and stop number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.And("I Submit the changes to the route stops", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.When("I open the Activity Log Aggregator for the selected route", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
 testRunner.Then("I should see a Time Adjustment comment for the updated stop which shows the Sched" +
                    "uled Delivery time change", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
